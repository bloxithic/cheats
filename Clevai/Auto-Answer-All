(async()=>{const waitFor=(selector,timeout=5000)=>new Promise((resolve,reject)=>{const start=Date.now();const check=()=>{const el=document.querySelector(selector);if(el)return resolve(el);if(Date.now()-start>timeout)return reject(`Timeout waiting for ${selector}`);requestAnimationFrame(check)};check()});const wait=(ms)=>new Promise(res=>setTimeout(res,ms));async function completeOneQuiz(){while(true){try{const correct=await waitFor('div[id^="input_correct-option-"]',1000);correct.click();await wait(200);const btn1=await waitFor('span.link-btn',1000);btn1.click();await wait(200);const btn2=await waitFor('span.link-btn',1000);btn2.click();await wait(400)}catch{break} }try{const finalBtn=await waitFor('p.link-btn',3000);finalBtn.click()}catch{}}const completeAllQuizzes=async()=>{let nextId=0;try{const startQuiz=await waitFor('a#action-click_lo_common_0.exercise-one-content',5000);startQuiz.click();await wait(500)}catch{console.log('❌ Failed to start from homepage.');return}while(true){console.log(`▶️ Starting quiz with id = ${nextId}`);await completeOneQuiz();nextId++;const nextSelector=`a[id="${nextId}"].exercise-one-content`;try{await wait(700);const nextQuiz=await waitFor(nextSelector,500);nextQuiz.click();await wait(400)}catch{console.log(`✅ Finished all quizzes. Last tried id = ${nextId}`);break}}try{const homeBtn=await waitFor('div.coaching-link-not-btn',3000);homeBtn.click()}catch{console.log('⚠️ Could not return to homepage.')}};await completeAllQuizzes()})();
